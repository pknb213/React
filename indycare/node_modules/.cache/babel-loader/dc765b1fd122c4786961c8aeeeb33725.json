{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Axios from'axios';import LineGraph from\"../Public/LineGraph\";import BarGraph from\"../Public/BarGraph\";export var ChartSection=/*#__PURE__*/function(_React$Component){_inherits(ChartSection,_React$Component);function ChartSection(props){var _this;_classCallCheck(this,ChartSection);_this=_possibleConstructorReturn(this,_getPrototypeOf(ChartSection).call(this,props));_this.getKpi=function(sn){Axios.get('http://localhost:4000/get/kpi/'+sn).then(function(res){//console.log(res);\n_this.setState({kpi:res.data});_this.chart();// Before Loop, After getKpi . . .\n}).catch(function(err){alert(err);}).finally(function(){console.log(_this.state);});_this.chartID=setInterval(function(){return _this.chart();},10000);};_this.state={kpi:{},active:0,labels:{},kpi0:{},kpi1:{},kpi2:{},kpi3:{},kpi4:{}};return _this;}_createClass(ChartSection,[{key:\"componentDidMount\",value:function componentDidMount(){this.getKpi(this.props.sn);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.chartID);}},{key:\"chart\",value:function chart(){var _this2=this;// kpi.label === '' or kpi.key === 'none'일 땐, 생성 x\nvar i=0;this.state.kpi.map(function(kpi){if(kpi.key!=='none'){// console.log(kpi);\n_this2.get_data(kpi);i++;}else{_this2.setState(_defineProperty({},kpi.kpi,''));}});this.setState({active:i});//console.log(this.state);\n}},{key:\"get_data\",value:function get_data(kpi){var _this3=this;Axios.get('http://localhost:4000/chart/data/'+this.props.sn+'/'+kpi.axis+'/'+kpi.key+'/recent/'+kpi.period).then(function(res){console.log(kpi.kpi,kpi.key,kpi.axis,res.data);_this3.setState(_defineProperty({},kpi.kpi,res.data));}).catch(function(err){alert(err);});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"robot_chart\"},React.createElement(BarGraph,{data:this.state.kpi0}),React.createElement(LineGraph,{data:this.state.kpi1}));}}]);return ChartSection;}(React.Component);","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/RobotChart.js"],"names":["React","Axios","LineGraph","BarGraph","ChartSection","props","getKpi","sn","get","then","res","setState","kpi","data","chart","catch","err","alert","finally","console","log","state","chartID","setInterval","active","labels","kpi0","kpi1","kpi2","kpi3","kpi4","clearInterval","i","map","key","get_data","axis","period","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport LineGraph from \"../Public/LineGraph\";\r\nimport BarGraph from \"../Public/BarGraph\";\r\n\r\nexport class ChartSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kpi: {},\r\n            active: 0,\r\n            labels: {},\r\n            kpi0: {},\r\n            kpi1: {},\r\n            kpi2: {},\r\n            kpi3: {},\r\n            kpi4: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getKpi(this.props.sn);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.chartID);\r\n    }\r\n\r\n    getKpi = (sn) => {\r\n        Axios.get('http://localhost:4000/get/kpi/' + sn)\r\n            .then(res => {\r\n                //console.log(res);\r\n                this.setState({kpi: res.data});\r\n                this.chart(); // Before Loop, After getKpi . . .\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n            .finally(() => {\r\n                console.log(this.state);\r\n            });\r\n        this.chartID = setInterval(\r\n            () => this.chart(), 10000\r\n        );\r\n    };\r\n\r\n    chart() {\r\n        // kpi.label === '' or kpi.key === 'none'일 땐, 생성 x\r\n        let i = 0;\r\n        this.state.kpi.map((kpi) => {\r\n            if (kpi.key !== 'none') {\r\n                // console.log(kpi);\r\n                this.get_data(kpi);\r\n                i++;\r\n            } else {\r\n                this.setState({[kpi.kpi]: ''})\r\n            }\r\n        });\r\n        this.setState({active: i});\r\n        //console.log(this.state);\r\n    }\r\n\r\n    get_data(kpi) {\r\n        Axios.get('http://localhost:4000/chart/data/' + this.props.sn +\r\n            '/' + kpi.axis + '/' + kpi.key + '/recent/' + kpi.period)\r\n            .then(res => {\r\n                console.log(kpi.kpi, kpi.key, kpi.axis, res.data);\r\n                this.setState({[kpi.kpi]: res.data});\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"robot_chart\">\r\n                <BarGraph data={this.state.kpi0}/>\r\n                <LineGraph data={this.state.kpi1}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}