{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventDataTable.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport DownIcon from \"../../resources/Robot/icon-download.svg\";\n$.DataTable = DataTable;\nexport class EventDataTable extends React.Component {\n  constructor(props) {\n    super(props); // this.myRef = React.createRef();\n  }\n\n  componentDidMount(nextProps, nextState) {\n    if (this.state.reload) {\n      $(this.refs.main).DataTable().ajax.reload();\n    } else {\n      Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/limit').then(res => {\n        console.log(res);\n        this.table = $(this.refs.main).DataTable({\n          data: res.data,\n          process: true,\n          searching: false,\n          paging: false,\n          lengthChange: false,\n          bInfo: false,\n          scrollXInner: '550px',\n          scrollX: '530px',\n          scrollY: false,\n          order: [[0, 'desc']],\n          columns: [{\n            \"data\": \"occurrence_time\"\n          }, {\n            \"data\": \"code\"\n          }, {\n            \"data\": \"down\"\n          }],\n          language: {\n            \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\n          }\n        });\n        this.table.rows().every(index => {\n          let str = this.table.cell(index, 2).data();\n          this.table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\n        });\n      }).catch(e => {\n        alert(e);\n      }).finally(() => {});\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.table.clear(); //this.table.rows.add(this.transform(this.props.data));\n\n    this.table.draw();\n  }\n\n  componentWillUnmount() {\n    $('.event_history').find('dataTable').DataTable().destroy(true);\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      id: \"dataTable\",\n      className: \"\",\n      ref: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"DATE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"EVENT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"LOG\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventDataTable.js"],"names":["React","Axios","$","DataTable","EventDataTable","Component","constructor","props","componentDidMount","nextProps","nextState","state","reload","refs","main","ajax","get","sn","then","res","console","log","table","data","process","searching","paging","lengthChange","bInfo","scrollXInner","scrollX","scrollY","order","columns","language","rows","every","index","str","cell","DownIcon","catch","e","alert","finally","componentDidUpdate","prevProps","prevState","snapshot","clear","draw","componentWillUnmount","find","destroy","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport $ from 'jquery';\r\nimport DataTable from 'datatables.net-dt';\r\nimport DownIcon from '../../resources/Robot/icon-download.svg';\r\n\r\n$.DataTable = DataTable;\r\n\r\nexport class EventDataTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(nextProps, nextState) {\r\n        if (this.state.reload) {\r\n            $(this.refs.main).DataTable().ajax.reload();\r\n        } else {\r\n            Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/limit')\r\n                .then(res => {\r\n                    console.log(res);\r\n                    this.table = $(this.refs.main).DataTable({\r\n                        data: res.data,\r\n                        process: true,\r\n                        searching: false,\r\n                        paging: false,\r\n                        lengthChange: false,\r\n                        bInfo: false,\r\n                        scrollXInner: '550px',\r\n                        scrollX: '530px',\r\n                        scrollY: false,\r\n                        order: [[0, 'desc']],\r\n                        columns: [\r\n                            {\"data\": \"occurrence_time\"},\r\n                            {\"data\": \"code\"},\r\n                            {\"data\": \"down\"}\r\n                        ],\r\n                        language: {\r\n                            \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\r\n                        }\r\n                    });\r\n                    this.table.rows().every((index) => {\r\n                        let str = this.table.cell(index, 2).data();\r\n                        this.table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\r\n                    });\r\n                }).catch(e => {\r\n                alert(e);\r\n            }).finally(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.table.clear();\r\n        //this.table.rows.add(this.transform(this.props.data));\r\n        this.table.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $('.event_history')\r\n            .find('dataTable')\r\n            .DataTable()\r\n            .destroy(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"dataTable\" className=\"\" ref='main'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DATE</th>\r\n                    <th>EVENT</th>\r\n                    <th>LOG</th>\r\n                </tr>\r\n                </thead>\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}