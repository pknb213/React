{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import $ from'jquery';import DataTable from'datatables.net-dt';import DownIcon from\"../../resources/Robot/icon-download.svg\";$.DataTable=DataTable;export var EventDataTable=/*#__PURE__*/function(_React$Component){_inherits(EventDataTable,_React$Component);function EventDataTable(){var _getPrototypeOf2;var _this;_classCallCheck(this,EventDataTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(EventDataTable)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getFile=function(a,b){console.log(\"GET FILE:\",a,b);};return _this;}_createClass(EventDataTable,[{key:\"componentDidMount\",// constructor(props) {\n//     super(props);\n//     // this.myRef = React.createRef();\n// }\nvalue:function componentDidMount(nextProps,nextState){this.table=$(this.refs.main).DataTable({data:this.props.data,process:true,searching:false,paging:false,lengthChange:false,bInfo:false,scrollXInner:'550px',scrollX:'530px',scrollY:false,order:[[0,'desc']],columns:[{\"data\":\"occurrence_time\"},{\"data\":\"code\"},{\"data\":\"down\"}],language:{\"emptyTable\":\"저장된 이벤트 데이터가 없습니다.\"}});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){if(this.props.data.length>0&&prevProps.data!==this.props.data){var table=$(this.refs.main).DataTable();table.clear();table.rows.add(this.props.data);table.rows().every(function(index){var str=table.cell(index,2).data();table.cell(index,2).data(str+'<img alt=\"\" src='+DownIcon+'></a>');});table.draw();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){$(this.refs.main).DataTable().destroy(true);}},{key:\"render\",value:function render(){return React.createElement(\"table\",{id:\"dataTable\",className:\"\",ref:\"main\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"DATE\"),React.createElement(\"th\",null,\"EVENT\"),React.createElement(\"th\",null,\"LOG\"))));}}]);return EventDataTable;}(React.Component);","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventDataTable.js"],"names":["React","$","DataTable","EventDataTable","getFile","a","b","console","log","nextProps","nextState","table","refs","main","data","props","process","searching","paging","lengthChange","bInfo","scrollXInner","scrollX","scrollY","order","columns","language","prevProps","prevState","snapshot","length","clear","rows","add","every","index","str","cell","DownIcon","draw","destroy","Component"],"mappings":"gsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,C,8DAGAD,CAAC,CAACC,SAAF,CAAcA,SAAd,CAEA,UAAaC,CAAAA,cAAb,2aA0CIC,OA1CJ,CA0Cc,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAChBC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBH,CAAzB,CAA4BC,CAA5B,EACH,CA5CL,qEACI;AACA;AACA;AACA;AAJJ,iCAMsBG,SANtB,CAMiCC,SANjC,CAM4C,CACpC,KAAKC,KAAL,CAAaV,CAAC,CAAC,KAAKW,IAAL,CAAUC,IAAX,CAAD,CAAkBX,SAAlB,CAA4B,CACrCY,IAAI,CAAE,KAAKC,KAAL,CAAWD,IADoB,CAErCE,OAAO,CAAE,IAF4B,CAGrCC,SAAS,CAAE,KAH0B,CAIrCC,MAAM,CAAE,KAJ6B,CAKrCC,YAAY,CAAE,KALuB,CAMrCC,KAAK,CAAE,KAN8B,CAOrCC,YAAY,CAAE,OAPuB,CAQrCC,OAAO,CAAE,OAR4B,CASrCC,OAAO,CAAE,KAT4B,CAUrCC,KAAK,CAAE,CAAC,CAAC,CAAD,CAAI,MAAJ,CAAD,CAV8B,CAWrCC,OAAO,CAAE,CACL,CAAC,OAAQ,iBAAT,CADK,CAEL,CAAC,OAAQ,MAAT,CAFK,CAGL,CAAC,OAAQ,MAAT,CAHK,CAX4B,CAgBrCC,QAAQ,CAAE,CACN,aAAc,oBADR,CAhB2B,CAA5B,CAAb,CAoBH,CA3BL,8DA6BuBC,SA7BvB,CA6BkCC,SA7BlC,CA6B6CC,QA7B7C,CA6BuD,CAC/C,GAAI,KAAKd,KAAL,CAAWD,IAAX,CAAgBgB,MAAhB,CAAyB,CAAzB,EAA8BH,SAAS,CAACb,IAAV,GAAmB,KAAKC,KAAL,CAAWD,IAAhE,CAAsE,CAClE,GAAIH,CAAAA,KAAK,CAAGV,CAAC,CAAC,KAAKW,IAAL,CAAUC,IAAX,CAAD,CAAkBX,SAAlB,EAAZ,CACAS,KAAK,CAACoB,KAAN,GACApB,KAAK,CAACqB,IAAN,CAAWC,GAAX,CAAe,KAAKlB,KAAL,CAAWD,IAA1B,EACAH,KAAK,CAACqB,IAAN,GAAaE,KAAb,CAAmB,SAACC,KAAD,CAAW,CAC1B,GAAIC,CAAAA,GAAG,CAAGzB,KAAK,CAAC0B,IAAN,CAAWF,KAAX,CAAkB,CAAlB,EAAqBrB,IAArB,EAAV,CACAH,KAAK,CAAC0B,IAAN,CAAWF,KAAX,CAAkB,CAAlB,EAAqBrB,IAArB,CAA0BsB,GAAG,CAAG,kBAAN,CAA2BE,QAA3B,CAAsC,OAAhE,EACH,CAHD,EAIA3B,KAAK,CAAC4B,IAAN,GACH,CACJ,CAxCL,mEA8C2B,CACnBtC,CAAC,CAAC,KAAKW,IAAL,CAAUC,IAAX,CAAD,CACKX,SADL,GAEKsC,OAFL,CAEa,IAFb,EAGH,CAlDL,uCAoDa,CACL,MACI,8BAAO,EAAE,CAAC,WAAV,CAAsB,SAAS,CAAC,EAAhC,CAAmC,GAAG,CAAC,MAAvC,EACI,iCACA,8BACI,qCADJ,CAEI,sCAFJ,CAGI,oCAHJ,CADA,CADJ,CADJ,CAWH,CAhEL,4BAAoCxC,KAAK,CAACyC,SAA1C","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport DataTable from 'datatables.net-dt';\r\nimport DownIcon from '../../resources/Robot/icon-download.svg';\r\n\r\n$.DataTable = DataTable;\r\n\r\nexport class EventDataTable extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.myRef = React.createRef();\r\n    // }\r\n\r\n    componentDidMount(nextProps, nextState) {\r\n        this.table = $(this.refs.main).DataTable({\r\n            data: this.props.data,\r\n            process: true,\r\n            searching: false,\r\n            paging: false,\r\n            lengthChange: false,\r\n            bInfo: false,\r\n            scrollXInner: '550px',\r\n            scrollX: '530px',\r\n            scrollY: false,\r\n            order: [[0, 'desc']],\r\n            columns: [\r\n                {\"data\": \"occurrence_time\"},\r\n                {\"data\": \"code\"},\r\n                {\"data\": \"down\"}\r\n            ],\r\n            language: {\r\n                \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.data.length > 0 && prevProps.data !== this.props.data) {\r\n            let table = $(this.refs.main).DataTable();\r\n            table.clear();\r\n            table.rows.add(this.props.data);\r\n            table.rows().every((index) => {\r\n                let str = table.cell(index, 2).data();\r\n                table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\r\n            });\r\n            table.draw();\r\n        }\r\n    }\r\n\r\n    getFile = (a, b) => {\r\n        console.log(\"GET FILE:\", a, b);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        $(this.refs.main)\r\n            .DataTable()\r\n            .destroy(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"dataTable\" className=\"\" ref='main'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DATE</th>\r\n                    <th>EVENT</th>\r\n                    <th>LOG</th>\r\n                </tr>\r\n                </thead>\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}