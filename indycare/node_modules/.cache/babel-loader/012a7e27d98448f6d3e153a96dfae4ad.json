{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventHistory.js\";\nimport React from 'react';\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\nimport { EventDataTable } from \"./EventDataTable\";\nimport $ from \"jquery\";\nimport { Modal } from \"./Modal\";\nexport class EventHistoryView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      $(this.refs.modal)[0].style.display = 'block';\n    };\n\n    this.closeModal = () => {\n      $(this.refs.modal)[0].style.display = 'none';\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.event_listener = this.event_listener.bind(this);\n    this.state = {\n      reload: false\n    };\n  }\n\n  componentDidMount() {\n    let modal = $(this.refs.modal)[0];\n    this.event_listener(this.props.sn);\n\n    window.onclick = event => {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  } // 가능하면 Modal은 하위 Component의 isOpen State를 전달함으로써 컨트롤 해야 함. 현재 CSS 이용.\n\n\n  event_listener(sn) {\n    console.log(this.state);\n    const event_source = new EventSource(\"http://localhost:4000/stream?channel=\" + sn + \"_event\");\n    event_source.addEventListener('message', function (event) {\n      console.log(event);\n      console.log(this.parent().state);\n      this.parent().setState({\n        reload: true\n      });\n    }, false);\n    event_source.addEventListener('fail', function (event) {\n      alert(event);\n    }, false);\n    event_source.addEventListener('error', function (event) {//alert(event['message']);\n    }, false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconHistory,\n      alt: \"icon_event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Event History\"), React.createElement(\"div\", {\n      className: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"history_Btn\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\uB354\\uBCF4\\uAE30\"), React.createElement(\"img\", {\n      src: iconMore,\n      alt: \"icon_more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"history_Modal\",\n      className: \"more_modal\",\n      ref: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      ref: \"close\",\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(Modal, {\n      sn: this.props.sn,\n      reload: this.state.reload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))))), React.createElement(EventDataTable, {\n      sn: this.props.sn,\n      reload: this.state.reload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventHistory.js"],"names":["React","EventDataTable","$","Modal","EventHistoryView","Component","constructor","props","openModal","refs","modal","style","display","closeModal","bind","event_listener","state","reload","componentDidMount","sn","window","onclick","event","target","console","log","event_source","EventSource","addEventListener","parent","setState","alert","render","iconHistory","iconMore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,KAAR,QAAoB,SAApB;AAEA,OAAO,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,SArBmB,GAqBP,MAAM;AACdN,MAAAA,CAAC,CAAC,KAAKO,IAAL,CAAUC,KAAX,CAAD,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,OAAtC;AACH,KAvBkB;;AAAA,SAyBnBC,UAzBmB,GAyBN,MAAM;AACfX,MAAAA,CAAC,CAAC,KAAKO,IAAL,CAAUC,KAAX,CAAD,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,MAAtC;AACH,KA3BkB;;AAEf,SAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAeM,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKD,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIR,KAAK,GAAGR,CAAC,CAAC,KAAKO,IAAL,CAAUC,KAAX,CAAD,CAAmB,CAAnB,CAAZ;AACA,SAAKK,cAAL,CAAoB,KAAKR,KAAL,CAAWY,EAA/B;;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACC,MAAN,KAAiBb,KAArB,EAA2B;AACvBA,QAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACH;AACJ,KAJD;AAKH,GAnBiD,CAqBlD;;;AASAG,EAAAA,cAAc,CAACI,EAAD,EAAK;AACfK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,UAAMU,YAAY,GAAG,IAAIC,WAAJ,CAAgB,0CAA0CR,EAA1C,GAA+C,QAA/D,CAArB;AACAO,IAAAA,YAAY,CAACE,gBAAb,CAA8B,SAA9B,EAAyC,UAAUN,KAAV,EAAiB;AACtDE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,MAAL,GAAcb,KAA1B;AACA,WAAKa,MAAL,GAAcC,QAAd,CAAuB;AAACb,QAAAA,MAAM,EAAE;AAAT,OAAvB;AAEH,KALD,EAKG,KALH;AAMAS,IAAAA,YAAY,CAACE,gBAAb,CAA8B,MAA9B,EAAsC,UAAUN,KAAV,EAAiB;AACnDS,MAAAA,KAAK,CAACT,KAAD,CAAL;AACH,KAFD,EAEG,KAFH;AAGAI,IAAAA,YAAY,CAACE,gBAAb,CAA8B,OAA9B,EAAuC,UAAUN,KAAV,EAAiB,CACpD;AACH,KAFD,EAEG,KAFH;AAGH;;AAEDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEC,WAAV;AAAuB,MAAA,GAAG,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAE,KAAKzB,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAK,MAAA,GAAG,EAAE0B,QAAV;AAAoB,MAAA,GAAG,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAwB,MAAA,SAAS,EAAC,YAAlC;AAA+C,MAAA,GAAG,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,GAAG,EAAC,OAA5B;AAAoC,MAAA,OAAO,EAAE,KAAKrB,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAE,KAAKN,KAAL,CAAWY,EAAtB;AAA0B,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CALJ,CAHJ,CADJ,EAiBI,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAE,KAAKV,KAAL,CAAWY,EAA/B;AAAmC,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ;AAqBH;;AArEiD","sourcesContent":["import React from 'react';\r\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\r\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\r\nimport {EventDataTable} from \"./EventDataTable\";\r\nimport $ from \"jquery\";\r\nimport {Modal} from \"./Modal\";\r\n\r\nexport class EventHistoryView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.event_listener = this.event_listener.bind(this);\r\n        this.state = {\r\n            reload: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let modal = $(this.refs.modal)[0];\r\n        this.event_listener(this.props.sn);\r\n        window.onclick = (event) => {\r\n            if (event.target === modal){\r\n                modal.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // 가능하면 Modal은 하위 Component의 isOpen State를 전달함으로써 컨트롤 해야 함. 현재 CSS 이용.\r\n    openModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'block';\r\n    };\r\n\r\n    closeModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'none';\r\n    };\r\n\r\n    event_listener(sn) {\r\n        console.log(this.state);\r\n        const event_source = new EventSource(\"http://localhost:4000/stream?channel=\" + sn + \"_event\");\r\n        event_source.addEventListener('message', function (event) {\r\n            console.log(event);\r\n            console.log(this.parent().state);\r\n            this.parent().setState({reload: true});\r\n\r\n        }, false);\r\n        event_source.addEventListener('fail', function (event) {\r\n            alert(event);\r\n        }, false);\r\n        event_source.addEventListener('error', function (event) {\r\n            //alert(event['message']);\r\n        }, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"event_history\">\r\n                <div className=\"section_title\">\r\n                    <img src={iconHistory} alt=\"icon_event_history\"/>\r\n                    <h3>Event History</h3>\r\n                    <div className=\"more\">\r\n                        <button id=\"history_Btn\" onClick={this.openModal}>\r\n                            <span>더보기</span>\r\n                            <img src={iconMore} alt=\"icon_more\"/>\r\n                        </button>\r\n                        <div id=\"history_Modal\" className=\"more_modal\" ref='modal'>\r\n                            <div className=\"modal-content\">\r\n                                <span className=\"close\" ref='close' onClick={this.closeModal}>&times;</span>\r\n                                <Modal sn={this.props.sn} reload={this.state.reload}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <EventDataTable sn={this.props.sn} reload={this.state.reload}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}