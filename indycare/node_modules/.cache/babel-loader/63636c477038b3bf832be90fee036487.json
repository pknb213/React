{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheon\\\\Desktop\\\\Project\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventDataTable.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport DownIcon from \"../../resources/Robot/icon-download.svg\";\n$.DataTable = DataTable;\nexport class EventDataTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getFile = (a, b) => {\n      console.log(\"GET FILE:\", a, b);\n    };\n  }\n\n  // constructor(props) {\n  //     super(props);\n  //     // this.myRef = React.createRef();\n  // }\n  componentDidMount(nextProps, nextState) {\n    this.table = $(this.refs.main).DataTable({\n      data: this.props.data,\n      process: true,\n      searching: false,\n      paging: false,\n      lengthChange: false,\n      bInfo: false,\n      scrollXInner: '550px',\n      scrollX: '530px',\n      scrollY: false,\n      order: [[0, 'desc']],\n      columns: [{\n        \"data\": \"occurrence_time\"\n      }, {\n        \"data\": \"code\"\n      }, {\n        \"data\": \"down\"\n      }],\n      language: {\n        \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.data.length > 0 && prevProps.data !== this.props.data) {\n      let table = $(this.refs.main).DataTable();\n      table.clear();\n      table.rows.add(this.props.data);\n      table.rows().every(index => {\n        let str = table.cell(index, 2).data();\n        table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\n      });\n      table.draw();\n    }\n  }\n\n  componentWillUnmount() {\n    $(this.refs.main).DataTable().destroy(true);\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      id: \"dataTable\",\n      className: \"\",\n      ref: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"DATE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"EVENT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"LOG\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Cheon/Desktop/Project/React/indycare/src/components/Robot/EventDataTable.js"],"names":["React","$","DataTable","EventDataTable","Component","getFile","a","b","console","log","componentDidMount","nextProps","nextState","table","refs","main","data","props","process","searching","paging","lengthChange","bInfo","scrollXInner","scrollX","scrollY","order","columns","language","componentDidUpdate","prevProps","prevState","snapshot","length","clear","rows","add","every","index","str","cell","DownIcon","draw","componentWillUnmount","destroy","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport DataTable from 'datatables.net-dt';\r\nimport DownIcon from '../../resources/Robot/icon-download.svg';\r\n\r\n$.DataTable = DataTable;\r\n\r\nexport class EventDataTable extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.myRef = React.createRef();\r\n    // }\r\n\r\n    componentDidMount(nextProps, nextState) {\r\n        this.table = $(this.refs.main).DataTable({\r\n            data: this.props.data,\r\n            process: true,\r\n            searching: false,\r\n            paging: false,\r\n            lengthChange: false,\r\n            bInfo: false,\r\n            scrollXInner: '550px',\r\n            scrollX: '530px',\r\n            scrollY: false,\r\n            order: [[0, 'desc']],\r\n            columns: [\r\n                {\"data\": \"occurrence_time\"},\r\n                {\"data\": \"code\"},\r\n                {\"data\": \"down\"}\r\n            ],\r\n            language: {\r\n                \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.data.length > 0 && prevProps.data !== this.props.data) {\r\n            let table = $(this.refs.main).DataTable();\r\n            table.clear();\r\n            table.rows.add(this.props.data);\r\n            table.rows().every((index) => {\r\n                let str = table.cell(index, 2).data();\r\n                table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\r\n            });\r\n            table.draw();\r\n        }\r\n    }\r\n\r\n    getFile = (a, b) => {\r\n        console.log(\"GET FILE:\", a, b);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        $(this.refs.main)\r\n            .DataTable()\r\n            .destroy(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"dataTable\" className=\"\" ref='main'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DATE</th>\r\n                    <th>EVENT</th>\r\n                    <th>LOG</th>\r\n                </tr>\r\n                </thead>\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}