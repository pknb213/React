{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventDataTable.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport DownIcon from \"../../resources/Robot/icon-download.svg\";\n$.DataTable = DataTable;\nexport class EventDataTable extends React.Component {\n  constructor(props) {\n    super(props); // this.myRef = React.createRef();\n  }\n\n  componentDidMount(nextProps, nextState) {\n    console.log(\"Did M: \", this.props.data);\n    this.table = $(this.refs.main).DataTable({\n      data: this.props.data,\n      process: true,\n      searching: false,\n      paging: false,\n      lengthChange: false,\n      bInfo: false,\n      scrollXInner: '550px',\n      scrollX: '530px',\n      scrollY: false,\n      order: [[0, 'desc']],\n      columns: [{\n        \"data\": \"occurrence_time\"\n      }, {\n        \"data\": \"code\"\n      }, {\n        \"data\": \"down\"\n      }],\n      language: {\n        \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.data.length > 0) {\n      let table = $(this.refs.main).DataTable();\n      table.clear();\n      table.rows.add(this.props.data).draw();\n      table.rows().every(index => {\n        let str = table.cell(index, 2).data();\n        table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    $('.event_history').find('dataTable').DataTable().destroy(true);\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      id: \"dataTable\",\n      className: \"\",\n      ref: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"DATE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"EVENT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"LOG\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventDataTable.js"],"names":["React","Axios","$","DataTable","EventDataTable","Component","constructor","props","componentDidMount","nextProps","nextState","console","log","data","table","refs","main","process","searching","paging","lengthChange","bInfo","scrollXInner","scrollX","scrollY","order","columns","language","componentDidUpdate","prevProps","prevState","snapshot","length","clear","rows","add","draw","every","index","str","cell","DownIcon","componentWillUnmount","find","destroy","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport $ from 'jquery';\r\nimport DataTable from 'datatables.net-dt';\r\nimport DownIcon from '../../resources/Robot/icon-download.svg';\r\n\r\n$.DataTable = DataTable;\r\n\r\nexport class EventDataTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(nextProps, nextState) {\r\n        console.log(\"Did M: \", this.props.data);\r\n        this.table = $(this.refs.main).DataTable({\r\n            data: this.props.data,\r\n            process: true,\r\n            searching: false,\r\n            paging: false,\r\n            lengthChange: false,\r\n            bInfo: false,\r\n            scrollXInner: '550px',\r\n            scrollX: '530px',\r\n            scrollY: false,\r\n            order: [[0, 'desc']],\r\n            columns: [\r\n                {\"data\": \"occurrence_time\"},\r\n                {\"data\": \"code\"},\r\n                {\"data\": \"down\"}\r\n            ],\r\n            language: {\r\n                \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.data.length > 0) {\r\n            let table = $(this.refs.main).DataTable();\r\n            table.clear();\r\n            table.rows.add(this.props.data).draw();\r\n            table.rows().every((index) => {\r\n                let str = table.cell(index, 2).data();\r\n                table.cell(index, 2).data(str + '<img alt=\"\" src=' + DownIcon + '></a>');\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $('.event_history')\r\n            .find('dataTable')\r\n            .DataTable()\r\n            .destroy(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table id=\"dataTable\" className=\"\" ref='main'>\r\n                <thead>\r\n                <tr>\r\n                    <th>DATE</th>\r\n                    <th>EVENT</th>\r\n                    <th>LOG</th>\r\n                </tr>\r\n                </thead>\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}