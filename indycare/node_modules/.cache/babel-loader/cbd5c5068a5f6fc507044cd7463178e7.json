{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Public\\\\LineGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nlet myLineChart; // Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\n// Chart.default.global.legend.display = false;\n\nexport default class LineGraph extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      const _this$props = this.props,\n            data = _this$props.data,\n            average = _this$props.average,\n            labels = _this$props.labels;\n      if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\n      myLineChart = new Chart(myChartRef, {\n        type: 'line',\n        data: {\n          // Bring in data\n          labels: ['a', 'b', 'c', 'd', 'e'],\n          datasets: [{\n            label: \"Sales\",\n            data: [16, 46, 23, 72, 55, 78],\n            fill: false,\n            borderColor: \"#6610f2\"\n          }, {\n            label: \"National Average\",\n            data: [77, 42, 12, 33, 55, 88],\n            fill: false,\n            borderColor: \"#E0E0E0\"\n          }]\n        },\n        options: {//Customize chart options\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.buildChart();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"WorK Count [CNT]\"), React.createElement(\"div\", {\n      className: \"chart_cnt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myCountChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Public/LineGraph.js"],"names":["React","Chart","myLineChart","LineGraph","PureComponent","chartRef","createRef","buildChart","myChartRef","current","getContext","props","data","average","labels","destroy","type","datasets","label","fill","borderColor","options","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,IAAIC,WAAJ,C,CAEA;AACA;;AAEA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,aAA9B,CAA4C;AAAA;AAAA;AAAA,SACvDC,QADuD,GAC5CL,KAAK,CAACM,SAAN,EAD4C;;AAAA,SAWvDC,UAXuD,GAW1C,MAAM;AACf,YAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AADe,0BAEiB,KAAKC,KAFtB;AAAA,YAERC,IAFQ,eAERA,IAFQ;AAAA,YAEFC,OAFE,eAEFA,OAFE;AAAA,YAEOC,MAFP,eAEOA,MAFP;AAIf,UAAI,OAAOZ,WAAP,KAAuB,WAA3B,EAAwCA,WAAW,CAACa,OAAZ;AAExCb,MAAAA,WAAW,GAAG,IAAID,KAAJ,CAAUO,UAAV,EAAsB;AAChCQ,QAAAA,IAAI,EAAE,MAD0B;AAEhCJ,QAAAA,IAAI,EAAE;AACF;AACAE,UAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,CAFN;AAGFG,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,OADX;AAEIN,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFV;AAGIO,YAAAA,IAAI,EAAE,KAHV;AAIIC,YAAAA,WAAW,EAAE;AAJjB,WADM,EAON;AACIF,YAAAA,KAAK,EAAE,kBADX;AAEIN,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFV;AAGIO,YAAAA,IAAI,EAAE,KAHV;AAIIC,YAAAA,WAAW,EAAE;AAJjB,WAPM;AAHR,SAF0B;AAoBhCC,QAAAA,OAAO,EAAE,CACL;AADK;AApBuB,OAAtB,CAAd;AAyBH,KA1CsD;AAAA;;AAGvDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,UAAL;AACH;;AAEDgB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,SAAKnB,UAAL;AACH;;AAmCDoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,GAAG,EAAE,KAAKtB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH;;AArDsD","sourcesContent":["import React from 'react';\r\nimport Chart from 'chart.js';\r\nlet myLineChart;\r\n\r\n// Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\r\n// Chart.default.global.legend.display = false;\r\n\r\nexport default class LineGraph extends React.PureComponent {\r\n    chartRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.buildChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.buildChart();\r\n    }\r\n\r\n    buildChart = () => {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const {data, average, labels} = this.props;\r\n\r\n        if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\r\n\r\n        myLineChart = new Chart(myChartRef, {\r\n            type: 'line',\r\n            data: {\r\n                // Bring in data\r\n                labels: ['a','b','c','d','e'],\r\n                datasets: [\r\n                    {\r\n                        label: \"Sales\",\r\n                        data: [16, 46, 23, 72, 55, 78],\r\n                        fill: false,\r\n                        borderColor: \"#6610f2\"\r\n                    },\r\n                    {\r\n                        label: \"National Average\",\r\n                        data: [77, 42, 12, 33, 55, 88],\r\n                        fill: false,\r\n                        borderColor: \"#E0E0E0\"\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart_section\">\r\n                <h3>WorK Count [CNT]</h3>\r\n                <div className=\"chart_cnt\">\r\n                    <canvas id=\"myCountChart\" ref={this.chartRef}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}