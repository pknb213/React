{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventHistory.js\";\nimport React from 'react';\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\nimport { EventDataTable } from \"./EventDataTable\";\nimport $ from \"jquery\";\nimport { Modal } from \"./Modal\";\nimport Axios from \"axios\";\nexport class EventHistoryView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMainData = () => {\n      Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/limit').then(res => {\n        this.setState({\n          mainRes: res.data\n        });\n      }).catch(e => {\n        alert(e);\n      });\n    };\n\n    this.getModalData = () => {\n      Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/all').then(res => {\n        this.setState({\n          modalRes: res.data\n        });\n      }).catch(e => {\n        alert(e);\n      });\n    };\n\n    this.openModal = () => {\n      $(this.refs.modal)[0].style.display = 'block';\n    };\n\n    this.closeModal = () => {\n      $(this.refs.modal)[0].style.display = 'none';\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.getMainData = this.getMainData.bind(this);\n    this.getModalData = this.getModalData.bind(this);\n    this.state = {\n      source: new EventSource(\"http://localhost:4000/stream?channel=\" + this.props.sn + \"_event\"),\n      mainRes: [],\n      modalRes: []\n    };\n  }\n\n  componentDidMount() {\n    let modal = $(this.refs.modal)[0];\n    const source = this.state.source;\n    source.addEventListener('message', event => {\n      this.getMainData();\n      this.getModalData();\n    });\n\n    window.onclick = event => {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n\n    this.getMainData();\n    this.getModalData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconHistory,\n      alt: \"icon_event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Event History\"), React.createElement(\"div\", {\n      className: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"history_Btn\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\uB354\\uBCF4\\uAE30\"), React.createElement(\"img\", {\n      src: iconMore,\n      alt: \"icon_more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"history_Modal\",\n      className: \"more_modal\",\n      ref: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      ref: \"close\",\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(Modal, {\n      sn: this.props.sn,\n      data: this.state.modalRes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))))), React.createElement(EventDataTable, {\n      sn: this.props.sn,\n      data: this.state.mainRes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventHistory.js"],"names":["React","EventDataTable","$","Modal","Axios","EventHistoryView","Component","constructor","props","getMainData","get","sn","then","res","setState","mainRes","data","catch","e","alert","getModalData","modalRes","openModal","refs","modal","style","display","closeModal","bind","state","source","EventSource","componentDidMount","addEventListener","event","window","onclick","target","render","iconHistory","iconMore"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\r\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\r\nimport {EventDataTable} from \"./EventDataTable\";\r\nimport $ from \"jquery\";\r\nimport {Modal} from \"./Modal\";\r\nimport Axios from \"axios\";\r\n\r\nexport class EventHistoryView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.getMainData = this.getMainData.bind(this);\r\n        this.getModalData = this.getModalData.bind(this);\r\n        this.state = {\r\n            source: new EventSource(\"http://localhost:4000/stream?channel=\"\r\n                + this.props.sn + \"_event\"),\r\n            mainRes: [],\r\n            modalRes: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let modal = $(this.refs.modal)[0];\r\n        const {source} = this.state;\r\n        source.addEventListener('message', event => {\r\n            this.getMainData();\r\n            this.getModalData();\r\n        });\r\n        window.onclick = (event) => {\r\n            if (event.target === modal) {\r\n                modal.style.display = \"none\";\r\n            }\r\n        };\r\n        this.getMainData();\r\n        this.getModalData();\r\n    }\r\n\r\n    getMainData = () => {\r\n        Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/limit')\r\n            .then(res => {\r\n                this.setState({mainRes: res.data});\r\n            }).catch(e => {\r\n            alert(e);\r\n        });\r\n    };\r\n\r\n    getModalData = () => {\r\n        Axios.get('http://localhost:4000/datatable/events/' + this.props.sn + '/all')\r\n            .then(res => {\r\n                this.setState({modalRes: res.data});\r\n            }).catch(e => {\r\n            alert(e);\r\n        });\r\n    };\r\n\r\n    // 가능하면 Modal은 하위 Component의 isOpen State를 전달함으로써 컨트롤 해야 함. 현재 CSS 이용.\r\n    openModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'block';\r\n    };\r\n\r\n    closeModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'none';\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"event_history\">\r\n                <div className=\"section_title\">\r\n                    <img src={iconHistory} alt=\"icon_event_history\"/>\r\n                    <h3>Event History</h3>\r\n                    <div className=\"more\">\r\n                        <button id=\"history_Btn\" onClick={this.openModal}>\r\n                            <span>더보기</span>\r\n                            <img src={iconMore} alt=\"icon_more\"/>\r\n                        </button>\r\n                        <div id=\"history_Modal\" className=\"more_modal\" ref='modal'>\r\n                            <div className=\"modal-content\">\r\n                                <span className=\"close\" ref='close' onClick={this.closeModal}>&times;</span>\r\n                                <Modal sn={this.props.sn} data={this.state.modalRes}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <EventDataTable sn={this.props.sn} data={this.state.mainRes}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}