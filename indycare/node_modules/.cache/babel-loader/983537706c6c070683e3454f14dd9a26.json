{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\RobotChart.js\";\nimport React from 'react';\nimport Axios from 'axios';\nexport class ChartSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kpi: {},\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:4000/get/kpi/' + this.props.sn).then(res => {\n      //console.log(res);\n      this.setState({\n        kpi: res.data\n      });\n    }).catch(err => {\n      alert(err);\n    }).finally(() => {\n      console.log(this.state);\n    });\n    this.chartID = setInterval(() => this.chart(), 15000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.chartID);\n  }\n\n  chart() {\n    const res = this.state.kpi.map(i => {\n      this.get_chart(i);\n    });\n  }\n\n  get_chart(kpi) {\n    Axios.get('http://localhost:4000/chart/data/' + this.props.sn + '/' + kpi.axis + '/' + kpi.key + '/recent/' + this.kpi.period).then(res => {\n      console.log(res);\n      console.log(this.kpi.axis);\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"robot_chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"WorK Count [CNT]\"), React.createElement(\"div\", {\n      className: \"chart_cnt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myCountChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"chart_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Temperature [TMP]\"), React.createElement(\"div\", {\n      className: \"chart_tmp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myTempChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/RobotChart.js"],"names":["React","Axios","ChartSection","Component","constructor","props","state","kpi","date","Date","componentDidMount","get","sn","then","res","setState","data","catch","err","alert","finally","console","log","chartID","setInterval","chart","componentWillUnmount","clearInterval","map","i","get_chart","axis","key","period","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAG,EADG;AAETC,MAAAA,IAAI,EAAG,IAAIC,IAAJ;AAFE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,KAAK,CAACU,GAAN,CAAU,mCAAmC,KAAKN,KAAL,CAAWO,EAAxD,EACKC,IADL,CACUC,GAAG,IAAI;AACT;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAEO,GAAG,CAACE;AAAV,OAAd;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACH,KAPL,EAQKE,OARL,CAQa,MAAK;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACH,KAVL;AAWA,SAAKiB,OAAL,GAAeC,WAAW,CACtB,MAAM,KAAKC,KAAL,EADgB,EACF,KADE,CAA1B;AAGH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACH;;AAEDE,EAAAA,KAAK,GAAE;AACH,UAAMX,GAAG,GAAG,KAAKR,KAAL,CAAWC,GAAX,CAAeqB,GAAf,CAAoBC,CAAD,IAAO;AAClC,WAAKC,SAAL,CAAeD,CAAf;AACH,KAFW,CAAZ;AAGH;;AAEDC,EAAAA,SAAS,CAACvB,GAAD,EAAK;AACVN,IAAAA,KAAK,CAACU,GAAN,CAAU,sCAAsC,KAAKN,KAAL,CAAWO,EAAjD,GACN,GADM,GACAL,GAAG,CAACwB,IADJ,GACW,GADX,GACiBxB,GAAG,CAACyB,GADrB,GAC2B,UAD3B,GAEN,KAAKzB,GAAL,CAAS0B,MAFb,EAGKpB,IAHL,CAGUC,GAAG,IAAG;AACRO,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,GAAL,CAASwB,IAArB;AACH,KANL,EAOKd,KAPL,CAOWC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACH,KATL;AAUH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CAPJ,CADJ;AAgBH;;AAnE6C","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport class ChartSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kpi : {},\r\n            date : new Date()\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get('http://localhost:4000/get/kpi/' + this.props.sn)\r\n            .then(res => {\r\n                //console.log(res);\r\n                this.setState({kpi: res.data})\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            })\r\n            .finally(()=> {\r\n                console.log(this.state);\r\n            });\r\n        this.chartID = setInterval(\r\n            () => this.chart(), 15000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.chartID);\r\n    }\r\n\r\n    chart(){\r\n        const res = this.state.kpi.map((i) => {\r\n            this.get_chart(i);\r\n        })\r\n    }\r\n\r\n    get_chart(kpi){\r\n        Axios.get('http://localhost:4000/chart/data/' + this.props.sn +\r\n            '/' + kpi.axis + '/' + kpi.key + '/recent/' +\r\n            this.kpi.period)\r\n            .then(res=> {\r\n                console.log(res);\r\n                console.log(this.kpi.axis);\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"robot_chart\">\r\n                <div className=\"chart_section\">\r\n                    <h3>WorK Count [CNT]</h3>\r\n                    <div className=\"chart_cnt\">\r\n                        <canvas id=\"myCountChart\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chart_section\">\r\n                    <h3>Temperature [TMP]</h3>\r\n                    <div className=\"chart_tmp\">\r\n                        <canvas id=\"myTempChart\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}