{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\EventHistory.js\";\nimport React from 'react';\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\nimport { EventDataTable } from \"./EventDataTable\";\nimport $ from \"jquery\";\nimport { Modal } from \"./Modal\";\nexport class EventHistoryView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      $(this.refs.modal)[0].style.display = 'block';\n    };\n\n    this.closeModal = () => {\n      $(this.refs.modal)[0].style.display = 'none';\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.state = {\n      source: new EventSource(\"http://localhost:4000/stream?channel=\" + this.props.sn + \"_event\"),\n      reload: false\n    };\n  }\n\n  componentDidMount() {\n    let modal = $(this.refs.modal)[0];\n    const source = this.state.source;\n    this.event_listener(source);\n\n    window.onclick = event => {\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  } // 가능하면 Modal은 하위 Component의 isOpen State를 전달함으로써 컨트롤 해야 함. 현재 CSS 이용.\n\n\n  event_listener(src) {\n    src.addEventListener('message', function (event) {\n      console.log(event);\n      console.log(src);\n      console.log(this.state);\n      this.setState({\n        reload: !this.state.reload\n      });\n    }, false);\n    src.addEventListener('fail', function (event) {\n      alert(event);\n    }, false);\n    src.addEventListener('error', function (event) {//alert(event['message']);\n    }, false);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconHistory,\n      alt: \"icon_event_history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Event History\"), React.createElement(\"div\", {\n      className: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"history_Btn\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\uB354\\uBCF4\\uAE30\"), React.createElement(\"img\", {\n      src: iconMore,\n      alt: \"icon_more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"history_Modal\",\n      className: \"more_modal\",\n      ref: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      ref: \"close\",\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(Modal, {\n      sn: this.props.sn,\n      reload: this.state.reload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))))), React.createElement(EventDataTable, {\n      sn: this.props.sn,\n      reload: this.state.reload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/EventHistory.js"],"names":["React","EventDataTable","$","Modal","EventHistoryView","Component","constructor","props","openModal","refs","modal","style","display","closeModal","bind","state","source","EventSource","sn","reload","componentDidMount","event_listener","window","onclick","event","target","src","addEventListener","console","log","setState","alert","render","iconHistory","iconMore"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport iconHistory from \"../../resources/Robot/icon-history.svg\";\r\nimport iconMore from \"../../resources/Robot/icon-more.svg\";\r\nimport {EventDataTable} from \"./EventDataTable\";\r\nimport $ from \"jquery\";\r\nimport {Modal} from \"./Modal\";\r\n\r\nexport class EventHistoryView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            source: new EventSource(\"http://localhost:4000/stream?channel=\" + this.props.sn + \"_event\"),\r\n            reload: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let modal = $(this.refs.modal)[0];\r\n        const {source} = this.state;\r\n        this.event_listener(source);\r\n        window.onclick = (event) => {\r\n            if (event.target === modal){\r\n                modal.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // 가능하면 Modal은 하위 Component의 isOpen State를 전달함으로써 컨트롤 해야 함. 현재 CSS 이용.\r\n    openModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'block';\r\n    };\r\n\r\n    closeModal = () => {\r\n        $(this.refs.modal)[0].style.display = 'none';\r\n    };\r\n\r\n    event_listener(src) {\r\n        src.addEventListener('message', function (event) {\r\n            console.log(event);\r\n            console.log(src);\r\n            console.log(this.state);\r\n            this.setState({reload: !this.state.reload});\r\n        }, false);\r\n        src.addEventListener('fail', function (event) {\r\n            alert(event);\r\n        }, false);\r\n        src.addEventListener('error', function (event) {\r\n            //alert(event['message']);\r\n        }, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"event_history\">\r\n                <div className=\"section_title\">\r\n                    <img src={iconHistory} alt=\"icon_event_history\"/>\r\n                    <h3>Event History</h3>\r\n                    <div className=\"more\">\r\n                        <button id=\"history_Btn\" onClick={this.openModal}>\r\n                            <span>더보기</span>\r\n                            <img src={iconMore} alt=\"icon_more\"/>\r\n                        </button>\r\n                        <div id=\"history_Modal\" className=\"more_modal\" ref='modal'>\r\n                            <div className=\"modal-content\">\r\n                                <span className=\"close\" ref='close' onClick={this.closeModal}>&times;</span>\r\n                                <Modal sn={this.props.sn} reload={this.state.reload}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <EventDataTable sn={this.props.sn} reload={this.state.reload}/>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}