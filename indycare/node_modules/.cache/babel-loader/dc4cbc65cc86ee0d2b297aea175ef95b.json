{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Robot\\\\Modal.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport DownIcon from \"../../resources/Robot/icon-download.svg\";\n$.DataTable = DataTable;\nexport class Modal extends React.Component {\n  constructor(props) {\n    super(props); // this.myRef = React.createRef();\n  }\n\n  componentDidMount(nextProps, nextState) {\n    Axios.get('http://localhost:4000/datatable/events/' + this.props.sn).then(res => {\n      console.log(res);\n      this.table = $(this.refs.main).DataTable({\n        data: res.data,\n        process: true,\n        searching: false,\n        paging: false,\n        lengthChange: false,\n        bInfo: false,\n        scrollXInner: '550px',\n        scrollX: '530px',\n        scrollY: false,\n        order: [[0, 'desc']],\n        columns: [{\n          \"data\": \"occurrence_time\"\n        }, {\n          \"data\": \"code\"\n        }, {\n          \"data\": \"down\"\n        }],\n        language: {\n          \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\n        }\n      });\n      this.table.rows().every(index => {\n        let a = this.table.cell(index, 2).data();\n        this.table.cell(index, 2).data(a + '<img alt=\"\" src=' + DownIcon + '></a>');\n      });\n    }).catch(e => {\n      alert(e);\n    }).finally(() => {});\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.table.clear(); //this.table.rows.add(this.transform(this.props.data));\n\n    this.table.draw();\n  }\n\n  componentWillUnmount() {\n    $('.event_history').find('dataTable_history').DataTable().destroy(true);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"history_table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"All Event History\"), React.createElement(\"table\", {\n      id: \"dataTable_history\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"DATE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"EVENT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"LOG\")))));\n  }\n\n}\n/*\r\n<React.Fragment>\r\n    {\r\n        isOpen ?\r\n            <React.Fragment>\r\n                <div className=\"history_table\">\r\n                    <h2>All Event History</h2>\r\n                    <table id=\"dataTable_history\" className=\"\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>DATE</th>\r\n                            <th>EVENT</th>\r\n                            <th>LOG</th>\r\n                        </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n            null\r\n    }\r\n</React.Fragment>\r\n*/","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Robot/Modal.js"],"names":["React","Axios","$","DataTable","Modal","Component","constructor","props","componentDidMount","nextProps","nextState","get","sn","then","res","console","log","table","refs","main","data","process","searching","paging","lengthChange","bInfo","scrollXInner","scrollX","scrollY","order","columns","language","rows","every","index","a","cell","DownIcon","catch","e","alert","finally","componentDidUpdate","prevProps","prevState","snapshot","clear","draw","componentWillUnmount","find","destroy","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport $ from 'jquery';\r\nimport DataTable from 'datatables.net-dt';\r\nimport DownIcon from '../../resources/Robot/icon-download.svg';\r\n\r\n$.DataTable = DataTable;\r\n\r\nexport class Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(nextProps, nextState) {\r\n        Axios.get('http://localhost:4000/datatable/events/' + this.props.sn)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.table = $(this.refs.main).DataTable({\r\n                    data: res.data,\r\n                    process: true,\r\n                    searching: false,\r\n                    paging: false,\r\n                    lengthChange: false,\r\n                    bInfo: false,\r\n                    scrollXInner: '550px',\r\n                    scrollX: '530px',\r\n                    scrollY: false,\r\n                    order: [[0, 'desc']],\r\n                    columns: [\r\n                        {\"data\": \"occurrence_time\"},\r\n                        {\"data\": \"code\"},\r\n                        {\"data\": \"down\"}\r\n                    ],\r\n                    language: {\r\n                        \"emptyTable\": \"저장된 이벤트 데이터가 없습니다.\"\r\n                    }\r\n                });\r\n                this.table.rows().every((index) => {\r\n                    let a = this.table.cell(index, 2).data();\r\n                    this.table.cell(index, 2).data(a + '<img alt=\"\" src=' + DownIcon + '></a>');\r\n                });\r\n            }).catch(e => {\r\n            alert(e);\r\n        }).finally(() => {\r\n\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.table.clear();\r\n        //this.table.rows.add(this.transform(this.props.data));\r\n        this.table.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        $('.event_history')\r\n            .find('dataTable_history')\r\n            .DataTable()\r\n            .destroy(true);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"history_table\">\r\n                <h2>All Event History</h2>\r\n                <table id=\"dataTable_history\" className=\"\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>DATE</th>\r\n                        <th>EVENT</th>\r\n                        <th>LOG</th>\r\n                    </tr>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<React.Fragment>\r\n    {\r\n        isOpen ?\r\n            <React.Fragment>\r\n                <div className=\"history_table\">\r\n                    <h2>All Event History</h2>\r\n                    <table id=\"dataTable_history\" className=\"\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>DATE</th>\r\n                            <th>EVENT</th>\r\n                            <th>LOG</th>\r\n                        </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n            :\r\n            null\r\n    }\r\n</React.Fragment>\r\n*/"]},"metadata":{},"sourceType":"module"}