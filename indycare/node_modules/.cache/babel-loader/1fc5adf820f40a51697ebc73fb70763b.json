{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Public\\\\LineGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nlet myLineChart; // Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\n// Chart.default.global.legend.display = false;\n\nexport default class LineGraph extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      let myChartRef = this.chartRef.current.getContext(\"2d\");\n      myChartRef.canvas.width = '1200px';\n      myChartRef.canvas.height = '300px';\n      const _this$props = this.props,\n            data = _this$props.data,\n            data2 = _this$props.data2,\n            labels = _this$props.labels;\n      if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\n      myLineChart = new Chart(myChartRef, {\n        type: 'line',\n        data: {\n          // Bring in data\n          //labels: ['a', 'b', 'c', 'd', 'e', 'f'],\n          // labels: labels\n          datasets: [{\n            label: \"Sales\",\n            //data: [16, 46, 23, 72, 55, 78],\n            // data: [{'x': '11-06 03:16:00', 'y': 53},\n            // {'x': '11-06 03:15:00', 'y': 11},\n            // {'x': '11-06 03:14:00', 'y': 34},\n            // {'x': '11-06 03:13:00', 'y': 78}],\n            data: data,\n            fill: false,\n            backgroundColor: \"rgba(255,99,132,0.2)\",\n            borderColor: \"rgba(255,99,132)\",\n            borderWidth: 1,\n            lineTension: 0.2,\n            pointRadius: 1.5\n          }, {\n            label: \"National Average\",\n            //data: [77, 42, 12, 33, 55, 88],\n            // data: [{'x': '11-06 03:16:00', 'y': 34},\n            // {'x': '11-06 03:15:00', 'y': 21},\n            // {'x': '11-06 03:14:00', 'y': 66},\n            // {'x': '11-06 03:13:00', 'y': 54}],\n            data: data2,\n            fill: false,\n            backgroundColor: \"rgba(255,205,86,0.2)\",\n            borderColor: \"rgba(255,205,86)\",\n            borderWidth: 1,\n            lineTension: 0.2,\n            pointRadius: 1.5\n          }]\n        },\n        options: {\n          //Customize chart options\n          legend: {\n            position: \"bottom\"\n          },\n          tooltips: {\n            mode: 'index',\n            intersect: false\n          },\n          hover: {\n            mode: 'nearest',\n            intersect: false,\n            animationDuration: 0\n          },\n          scales: {\n            xAxes: [{\n              //barThickness: 30,\n              type: 'time',\n              time: {\n                padding: 15,\n                fontStyle: \"bold\",\n                parser: 'YY-MM-DD HH:mm:ss',\n                unit: 'minute',\n                unitStepSize: 1,\n                displayFormat: {\n                  hour: 'MM-DD HH:mm'\n                }\n              },\n              ticks: {\n                autoSkip: true,\n                source: 'auto'\n              }\n            }] // yAxes: [{\n            //     scaleLabel: {\n            //         labelString: 'Temperature',\n            //     },\n            //     ticks: {\n            //         fontColor: \"rgba(0,0,0,1)\",\n            //         fontStyle: \"bold\",\n            //         maxTicksLimit: 10,\n            //         //minValue: 20,\n            //         //padding: 15,\n            //         beginAtZero: false,\n            //         stepValue: 5,\n            //         steps: 10\n            //     }\n            // }]\n\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.buildChart();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Temperature [TMP]\"), React.createElement(\"div\", {\n      className: \"chart_tmp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myTempChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Public/LineGraph.js"],"names":["React","Chart","myLineChart","LineGraph","PureComponent","chartRef","createRef","buildChart","myChartRef","current","getContext","canvas","width","height","props","data","data2","labels","destroy","type","datasets","label","fill","backgroundColor","borderColor","borderWidth","lineTension","pointRadius","options","legend","position","tooltips","mode","intersect","hover","animationDuration","scales","xAxes","time","padding","fontStyle","parser","unit","unitStepSize","displayFormat","hour","ticks","autoSkip","source","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nlet myLineChart;\r\n\r\n// Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\r\n// Chart.default.global.legend.display = false;\r\n\r\nexport default class LineGraph extends React.PureComponent {\r\n    chartRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.buildChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.buildChart();\r\n    }\r\n\r\n    buildChart = () => {\r\n        let myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        myChartRef.canvas.width = '1200px';\r\n        myChartRef.canvas.height = '300px';\r\n        const {data, data2, labels} = this.props;\r\n\r\n        if (typeof myLineChart !== \"undefined\") myLineChart.destroy();\r\n\r\n        myLineChart = new Chart(myChartRef, {\r\n            type: 'line',\r\n            data: {\r\n                // Bring in data\r\n                //labels: ['a', 'b', 'c', 'd', 'e', 'f'],\r\n                // labels: labels\r\n                datasets: [\r\n                    {\r\n                        label: \"Sales\",\r\n                        //data: [16, 46, 23, 72, 55, 78],\r\n                        // data: [{'x': '11-06 03:16:00', 'y': 53},\r\n                        // {'x': '11-06 03:15:00', 'y': 11},\r\n                        // {'x': '11-06 03:14:00', 'y': 34},\r\n                        // {'x': '11-06 03:13:00', 'y': 78}],\r\n                        data: data,\r\n                        fill: false,\r\n                        backgroundColor: \"rgba(255,99,132,0.2)\",\r\n                        borderColor: \"rgba(255,99,132)\",\r\n                        borderWidth: 1,\r\n                        lineTension: 0.2,\r\n                        pointRadius: 1.5\r\n                    },\r\n                    {\r\n                        label: \"National Average\",\r\n                        //data: [77, 42, 12, 33, 55, 88],\r\n                        // data: [{'x': '11-06 03:16:00', 'y': 34},\r\n                        // {'x': '11-06 03:15:00', 'y': 21},\r\n                        // {'x': '11-06 03:14:00', 'y': 66},\r\n                        // {'x': '11-06 03:13:00', 'y': 54}],\r\n                        data: data2,\r\n                        fill: false,\r\n                        backgroundColor: \"rgba(255,205,86,0.2)\",\r\n                        borderColor: \"rgba(255,205,86)\",\r\n                        borderWidth: 1,\r\n                        lineTension: 0.2,\r\n                        pointRadius: 1.5\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                legend: {\r\n                    position: \"bottom\"\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                },\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    animationDuration: 0\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        //barThickness: 30,\r\n                        type: 'time',\r\n                        time: {\r\n                            padding: 15,\r\n                            fontStyle: \"bold\",\r\n                            parser: 'YY-MM-DD HH:mm:ss',\r\n                            unit: 'minute',\r\n                            unitStepSize: 1,\r\n                            displayFormat: {\r\n                                hour: 'MM-DD HH:mm'\r\n                            }\r\n                        },\r\n                        ticks: {\r\n                            autoSkip: true,\r\n                            source: 'auto'\r\n                        }\r\n                    }],\r\n                    // yAxes: [{\r\n                    //     scaleLabel: {\r\n                    //         labelString: 'Temperature',\r\n                    //     },\r\n                    //     ticks: {\r\n                    //         fontColor: \"rgba(0,0,0,1)\",\r\n                    //         fontStyle: \"bold\",\r\n                    //         maxTicksLimit: 10,\r\n                    //         //minValue: 20,\r\n                    //         //padding: 15,\r\n                    //         beginAtZero: false,\r\n                    //         stepValue: 5,\r\n                    //         steps: 10\r\n                    //     }\r\n                    // }]\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart_section\">\r\n                <h3>Temperature [TMP]</h3>\r\n                <div className=\"chart_tmp\">\r\n                    <canvas id=\"myTempChart\" ref={this.chartRef}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}