{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\React\\\\indycare\\\\src\\\\components\\\\Public\\\\BarGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js';\nlet myBarChart; // Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\n// Chart.default.global.legend.display = false;\n\nexport default class BarGraph extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      const data = this.props.data;\n      if (typeof myBarChart !== \"undefined\") myBarChart.destroy();\n      myBarChart = new Chart(myChartRef, {\n        type: 'bar',\n        data: {\n          // Bring in data\n          //labels: ['a', 'b', 'c', 'd', 'e', 'f'],\n          // labels: labels\n          datasets: [{\n            label: \"National University\",\n            //data: [16, 46, 23, 72, 55, 78],\n            data: data,\n            fill: true,\n            borderColor: \"#6610f2\"\n          }]\n        },\n        options: {\n          //Customize chart options\n          legend: {\n            position: \"bottom\"\n          },\n          tooltips: {\n            mode: 'index',\n            intersect: false\n          },\n          hover: {\n            mode: 'nearest',\n            intersect: false,\n            animationDuration: 0\n          },\n          scales: {\n            xAxes: [{\n              //barThickness: 30,\n              type: 'time',\n              time: {\n                padding: 15,\n                fontStyle: \"bold\",\n                parser: 'YY-MM-DD HH:mm:ss',\n                unit: 'hour',\n                unitStepSize: 1,\n                displayFormat: {\n                  hour: 'MM-DD HH:mm'\n                }\n              },\n              ticks: {\n                autoSkip: true,\n                source: 'auto'\n              }\n            }]\n          }\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.buildChart();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Temperature [TMP]\"), React.createElement(\"div\", {\n      className: \"chart_tmp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"myTempChart\",\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/Documents/React/indycare/src/components/Public/BarGraph.js"],"names":["React","Chart","myBarChart","BarGraph","PureComponent","chartRef","createRef","buildChart","myChartRef","current","getContext","data","props","destroy","type","datasets","label","fill","borderColor","options","legend","position","tooltips","mode","intersect","hover","animationDuration","scales","xAxes","time","padding","fontStyle","parser","unit","unitStepSize","displayFormat","hour","ticks","autoSkip","source","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAIC,UAAJ,C,CAEA;AACA;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,aAA7B,CAA2C;AAAA;AAAA;AAAA,SACtDC,QADsD,GAC3CL,KAAK,CAACM,SAAN,EAD2C;;AAAA,SAWtDC,UAXsD,GAWzC,MAAM;AACf,YAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AADe,YAERC,IAFQ,GAEA,KAAKC,KAFL,CAERD,IAFQ;AAIf,UAAI,OAAOT,UAAP,KAAsB,WAA1B,EAAuCA,UAAU,CAACW,OAAX;AAEvCX,MAAAA,UAAU,GAAG,IAAID,KAAJ,CAAUO,UAAV,EAAsB;AAC/BM,QAAAA,IAAI,EAAE,KADyB;AAE/BH,QAAAA,IAAI,EAAE;AACF;AACA;AACA;AACAI,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,qBADX;AAEI;AACAL,YAAAA,IAAI,EAAEA,IAHV;AAIIM,YAAAA,IAAI,EAAE,IAJV;AAKIC,YAAAA,WAAW,EAAE;AALjB,WADM;AAJR,SAFyB;AAgB/BC,QAAAA,OAAO,EAAE;AACL;AACAC,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN,WAFH;AAKLC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE,OADA;AAENC,YAAAA,SAAS,EAAE;AAFL,WALL;AASLC,UAAAA,KAAK,EAAE;AACHF,YAAAA,IAAI,EAAE,SADH;AAEHC,YAAAA,SAAS,EAAE,KAFR;AAGHE,YAAAA,iBAAiB,EAAE;AAHhB,WATF;AAcLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CAAC;AACJ;AACAd,cAAAA,IAAI,EAAE,MAFF;AAGJe,cAAAA,IAAI,EAAE;AACFC,gBAAAA,OAAO,EAAE,EADP;AAEFC,gBAAAA,SAAS,EAAE,MAFT;AAGFC,gBAAAA,MAAM,EAAE,mBAHN;AAIFC,gBAAAA,IAAI,EAAE,MAJJ;AAKFC,gBAAAA,YAAY,EAAE,CALZ;AAMFC,gBAAAA,aAAa,EAAE;AACXC,kBAAAA,IAAI,EAAE;AADK;AANb,eAHF;AAaJC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,QAAQ,EAAE,IADP;AAEHC,gBAAAA,MAAM,EAAE;AAFL;AAbH,aAAD;AADH;AAdH;AAhBsB,OAAtB,CAAb;AAoDH,KArEqD;AAAA;;AAGtDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKjC,UAAL;AACH;;AAEDkC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,SAAKrC,UAAL;AACH;;AA8DDsC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAyB,MAAA,GAAG,EAAE,KAAKxC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH;;AAhFqD","sourcesContent":["import React from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nlet myBarChart;\r\n\r\n// Chart.default.global.defaultFontFamily = \"'PT Sans', sans-serif\";\r\n// Chart.default.global.legend.display = false;\r\n\r\nexport default class BarGraph extends React.PureComponent {\r\n    chartRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        this.buildChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.buildChart();\r\n    }\r\n\r\n    buildChart = () => {\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        const {data} = this.props;\r\n\r\n        if (typeof myBarChart !== \"undefined\") myBarChart.destroy();\r\n\r\n        myBarChart = new Chart(myChartRef, {\r\n            type: 'bar',\r\n            data: {\r\n                // Bring in data\r\n                //labels: ['a', 'b', 'c', 'd', 'e', 'f'],\r\n                // labels: labels\r\n                datasets: [\r\n                    {\r\n                        label: \"National University\",\r\n                        //data: [16, 46, 23, 72, 55, 78],\r\n                        data: data,\r\n                        fill: true,\r\n                        borderColor: \"#6610f2\"\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                legend: {\r\n                    position: \"bottom\"\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                },\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: false,\r\n                    animationDuration: 0\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        //barThickness: 30,\r\n                        type: 'time',\r\n                        time: {\r\n                            padding: 15,\r\n                            fontStyle: \"bold\",\r\n                            parser: 'YY-MM-DD HH:mm:ss',\r\n                            unit: 'hour',\r\n                            unitStepSize: 1,\r\n                            displayFormat: {\r\n                                hour: 'MM-DD HH:mm'\r\n                            }\r\n                        },\r\n                        ticks: {\r\n                            autoSkip: true,\r\n                            source: 'auto'\r\n                        }\r\n                    }],\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chart_section\">\r\n                <h3>Temperature [TMP]</h3>\r\n                <div className=\"chart_tmp\">\r\n                    <canvas id=\"myTempChart\" ref={this.chartRef}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}